# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    tags:
      - '*'
  pull_request:
    branches: [ "main" ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  modify_and_release_apk:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: mkdir
        run: |
          mkdir -p ./headless-browser/out
          chmod 777 ./headless-browser/out

      - name: run docker
        run: docker compose -f headless-browser/docker-compose.yml up -d --wait
      
      - name: Install npm
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run the download script
        run: node selenium-dl.js

      - name: stop docker
        run: docker compose -f headless-browser/docker-compose.yml down

      - name: save file name to variable
        id: file_name
        run: |
          TARGET_APK_NAME=$(basename -s .apk ./headless-browser/out/*.apk)
          echo "TARGET_APK_NAME=$TARGET_APK_NAME" >> $GITHUB_ENV
          
      - name: rename apk to something simple
        run: mv ./headless-browser/out/*.apk obsidian.apk

      - name: build apktool docker image
        run: |
          git clone --depth 1 --branch v2.9.0 https://github.com/iBotPeaches/Apktool.git
          cd ./Apktool
          docker build -t apktool:local -f docker/Dockerfile .

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3

      - name: unpack the apk
        run: |
          docker run --rm -v $PWD/:/workdir -w /workdir apktool:local apktool d obsidian.apk
          sudo chown -R runner ./obsidian

      - name: zip the folder
        run: zip -r obsidian-unpacked.zip obsidian/

      - name: download frida gadget
        uses: robinraju/release-downloader@v1.8
        with:
          repository: frida/frida
          latest: true
          fileName: "frida-gadget-*-android-arm64.so.xz"
          out-file-path: "./frida-gadget/"

      - name: extract the archive
        run: |
          unxz ./frida-gadget/*.xz
          mv ./frida-gadget/*.so ./frida-gadget/libgadget.so

      - name: copy gadget to library folder
        run: cp ./frida-gadget/libgadget.so ./obsidian/lib/arm64-v8a/libgadget.so

      - name: Install npm
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          cd ./frida-agent
          npm ci
          npm run build

      - name: copy agent to library folder
        run: |
          cp ./frida-agent/_agent.js ./obsidian/lib/arm64-v8a/libsslunpin.js.so
          cp ./frida-agent/gadget-config.json ./obsidian/lib/arm64-v8a/libgadget.config.so

      - name: add constructor block
        run: cat ./frida-agent/constructor.smali >> ./obsidian/smali/md/obsidian/MainActivity.smali

      - name: zip the folder
        run: zip -r obsidian-unpacked-hooked.zip obsidian/

      - name: save artifact
        uses: actions/upload-artifact@v3
        with:
          name: obsidian-unpacked-hooked
          path: ./obsidian-unpacked-hooked.zip

      - name: build the apk
        run: |
          docker run --rm -v $PWD/:/workdir -w /workdir apktool:local apktool b ./obsidian
          sudo chown -R runner ./obsidian/dist

      - name: save artifact
        uses: actions/upload-artifact@v3
        with:
          name: obsidian-apk-hooked
          path: ./obsidian/dist/obsidian.apk

      - uses: kevin-david/zipalign-sign-android-release@v1.1.1
        name: Sign app APK
        # ID used to access action output
        id: sign_app
        with:
          releaseDirectory: ./obsidian/dist/
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
          zipAlign: true

      - name: save artifact
        uses: actions/upload-artifact@v3
        with:
          name: obsidian-apk-signed
          path: ${{ steps.sign_app.outputs.signedReleaseFile }}

      - name: rename files
        run: |
          mv "${{ steps.sign_app.outputs.signedReleaseFile }}" "${{ env.TARGET_APK_NAME }}-hooked.apk"
          mv obsidian.apk "${{ env.TARGET_APK_NAME }}-hooked-unsigned.apk"

      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            "${{ env.TARGET_APK_NAME }}-hooked-unsigned.apk"
            "${{ env.TARGET_APK_NAME }}-hooked.apk"
